include:
- project: iiidevops-templates/ci-template
  file: ci/template.gitlab-ci.yml
stages:
- initial
- scan
- build
- deploy
- test
Test--SonarQube source code scan:
  variables:
    iiidevops: sonarqube
    CHART_TYPE: normal
  only:
  - master
Test--Anchore SBOM source code scan:
  variables:
    iiidevops: anchore-code
  only:
  - skip
Test--Checkmarx source code scan:
  variables:
    iiidevops: checkmarx
  only:
  - master
Build image:
  variables:
    iiidevops: build-image
  only:
  - master
  - develop
  - pipeline-update
Build--Scan docker image:
  stage: build
  image:
    name: alpine:3.17
    entrypoint:
    - ''
  variables:
    iiidevops: build-image
  needs:
  - Build image
  before_script:
  - apk add --update curl
  script:
  - echo "curl -s -L -X POST "${IIIDEV_URL}/v2/harbor/${CI_PROJECT_NAME}/scan" -F
    branch=${CI_COMMIT_BRANCH} -F commit_id=${CI_COMMIT_SHORT_SHA}"
  - curl -s -L -X POST "${IIIDEV_URL}/v2/harbor/${CI_PROJECT_NAME}/scan" -F branch=${CI_COMMIT_BRANCH}
    -F commit_id=${CI_COMMIT_SHORT_SHA}
  only:
  - master
  - develop
  - pipeline-update
  except:
    variables:
    - $CI_COMMIT_MESSAGE =~ /.*\(store\)$/
Build--Copy Image:
  stage: build
  image:
    name: iiiorg/iiidevops-cli:0.0.4
  allow_failure: true
  variables:
    iiidevops: deployed-environments
  needs:
  - Build image
  script:
  - 'RAWDATA="{}" RAWDATA=$(echo "${RAWDATA}" | jq --arg username "${BOT_USERNAME}"
    --arg password "${BOT_PASSWORD}" ''. + {username: $username, password: $password}'') '
  - RESPONSE="$(curl -sL --fail -X POST ${IIIDEV_URL}/user/login -H "Content-Type:application/json"
    -d "${RAWDATA}")"
  - TOKEN="$(echo "${RESPONSE}" | jq -r '.data.token')"
  - if [ -z "${TOKEN}" ]; then echo "Login failed"; exit 1; fi
  - echo "${CI_COMMIT_BRANCH} ${CI_PROJECT_NAME} ${CI_COMMIT_SHORT_SHA} {IIIDEV_URL}"
  - curl -L -X POST ${IIIDEV_URL}/harbor/handle_image -H "Authorization:Bearer $TOKEN"
    -F project_name=${CI_PROJECT_NAME} -F from_repo_name=${CI_COMMIT_BRANCH} -F from_tag=${CI_COMMIT_SHORT_SHA}
    -F dest_repo_name=${CI_PROJECT_NAME} -F dest_tag=${CI_COMMIT_BRANCH}
  only:
  - master
  - develop
  - pipeline-update
  except:
    variables:
    - $CI_COMMIT_MESSAGE =~ /.*\(store\)$/
Deploy--Set environment and wait deployment:
  variables:
    iiidevops: deploy-web
  only:
  - skip
Deploy--Web:
  variables:
    iiidevops: deploy-web
    CHART_WEB_PORT: 10009
    CHART_PROXY_BODY_SIZE: 1m
  only:
  - skip
Test--Anchore SBOM:
  variables:
    iiidevops: anchore
  only:
  - master
Test--ZAP:
  variables:
    iiidevops: zap
    CHART_WEB_PORT: 10009
  only:
  - skip
Test--WebInspect:
  variables:
    iiidevops: webinspect
  only:
  - skip
Test--Postman:
  variables:
    iiidevops: postman
    CHART_WEB_PORT: 10009
  only:
  - skip
Test--Sideex:
  variables:
    iiidevops: sideex
    CHART_WEB_PORT: 10009
  only:
  - skip
